stages:
  - build
  - dockerize
  - deploy

build-react:
  stage: build
  image: node:latest
  script:
    - npm ci
    - npm run build
  only:
    - main
    - autodeploy-test
  artifacts:
    paths:
      - ./dist

dockerize:
  stage: dockerize
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - main
    - autodeploy-test
  dependencies:
    - build-react

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa

  script:
    - ssh -o StrictHostKeyChecking=accept-new $DEPLOY_USER@$DEPLOY_SERVER "
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
        docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA &&
        docker stop mordappka_web || true &&
        docker rm mordappka_web || true &&
        docker run -d --name mordappka_web $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      "
  only:
    - main
    - autodeploy-test

